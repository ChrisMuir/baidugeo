% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_location.R
\name{bmap_get_location}
\alias{bmap_get_location}
\title{Get Location for a Vector of lat/lon coordinates.}
\usage{
bmap_get_location(
  lat,
  lon,
  type = c("data.frame", "json"),
  force = FALSE,
  cache_chunk_size = NULL
)
}
\arguments{
\item{lat}{numeric vector, vector of latitude values.}

\item{lon}{numeric vector, vector of longitude values.}

\item{type}{string, dictates the return data type. Valid inputs are 
\code{data.frame}, which will return a data.frame, or \code{json}, which 
will return a vector of json strings.}

\item{force}{logical, force online query, even if previously downloaded and 
saved to the data dictionary.}

\item{cache_chunk_size}{integer, indicates how often you want the API return
data to be saved to the package cache. Default value is NULL.}
}
\value{
char vector of json text objects. Each object contains the return 
  value(s) from the Baidu Maps query, as well as the return value status 
  code.
}
\description{
Takes a vector of lat/lon coordinates, or a list of lat/lon coordinates, 
sends them to the Baidu Maps API, output a char vector of addresses and 
address component info, as json text objects. This function also implements 
a data dictionary, saved as an rda object, to avoid sending the same query 
to Baidu twice.
}
\examples{
\dontrun{
lat <- c(
  30.616167082550779, 
  30.39624844375698, 
  30.679942845419565
)

lon <- c(
  114.27287244473057, 
  119.87833669326516, 
  104.06792346330406
)

bmap_get_location(lat, lon)
}
}
